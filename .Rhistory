dist
speed <- 35
dist <- W*speed+b
dist
speed <- 40
dist <- W*speed+b
dist
#113
speed <- cars[,1]
pred <- W*speed+b
pred
compare <- data.frame(pred,cars[,2],pred-cars[,2])
colnames(compare) <- c("예상","실제","오차")
head(compare)
#114
if(!require){
install.packages("car")
}
#114
if(!require(car)){
install.packages("car")
}
library(car)
newdata <- Prestige[,c(1:4)]
plot(newdata,pch=16,col="blue",
main="Matrix Scatterplot")
mod1 <- lm(income~education+prestige+  #regression extract
women,data=newdata)
summary(mod1)
#115
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
newdata2 <- Prestige[,c(1:5)]
head(newdata2)
mod2 <- lm(income ~education+prestige+
women +census,data=newdata2)
mod3 <- stepAIC(mod2)
mod3
summary(mod3)
predict(model)
cars[,2]-predict(model)
pred
#con
predict(model)
cars[,2]-predict(model)
pred <- W*speed+b
pred
compare <- data.frame(pred,cars[,2],pred-cars[,2])
compare
colnames(compare) <- c('예쌍','실제','오차')
head(compare)
#######
predhead(carmodelcarshead(cars)
plot(cars$speed,cars$dist)
head(cars)
plot(dist~speed,data=cars)
plot(cars$speed,cars$dist)
#114
if(!require(car)){
install.packages("car")
}
library(car)
newdata <- Prestige[,c(1:4)]
plot(newdata,pch=16,col="blue",
main="Matrix Scatterplot")
mod1 <- lm(income~education+prestige+  #regression extract
women,data=newdata)
summary(mod1)
head(Prestige)
tail(Prestige)
str(Prestige)
class(Prestige)
sum(is.na(Prestige))
newdata <- Prestige[,c(1:4)] #
plot(newdata,pch=16,col="blue", #산점도를 통해 변수 간 관계확인
main="Matrix Scatterplot")
mod1 <- lm(income~education+prestige+  #regression extract
women,data=newdata)
#census : 직업 식별 번호, type 직업 유형 (화이트, 블루, 프로페셔널)
summary(mod1)
#con
predict(model)
pred <- W*speed+b
pred
compare <- data.frame(pred,cars[,2],pred-cars[,2])
compare
colnames(compare) <- c('예쌍','실제','오차')
head(compare)
head(cars)
plot(dist~speed,data=cars)
plot(cars$speed,cars$dist) #??
#lm=linear model
#종속변수 독립변수 # y= 3.9x -18
model <- lm(dist~speed,cars)
model
str(model)
#114 companion to applied regression, 회귀 분석 및 통계 모델 지원
# 다양한 도구를 제공하는 인기 있는 packages
if(!require(car)){
install.packages("car")
}
library(car)
head(Prestige)
tail(Prestige)
str(Prestige)
class(Prestige)
sum(is.na(Prestige))
newdata <- Prestige[,c(1:4)] #data prepare
plot(newdata,pch=16,col="blue", #산점도를 통해 변수 간 관계확인
main="Matrix Scatterplot")
#census : 직업 식별 번호, type 직업 유형 (화이트, 블루, 프로페셔널)
summary(mod1)
library(Rtsne)
install.packages("Rtsne")
install.packages("ggplot2")
library(Rtsne)
library(ggplot2)
ds <- iris[,-5]
dup=which(duplicated(ds))
dup
ds <- ds[-dup]
ds.y <- iris$Species[-dup]
tsne <- Rtsne(ds,dims=3,perplexity=10)
library(MASS)
newdata2 <- Prestige[,c(1:5)]
#115 #adnjusted r squear : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
newdata2 <- Prestige[,c(1:5)]
#115 #adnjusted r squear : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
newdata2 <- Prestige[,c(1:5)]
#115 #adnjusted r squear : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
#115 #adnjusted r squear : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
newdata2 <- Prestige[,c(1:5)]
#115 #adjusted r square : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
newdata2 <- Prestige[,c(1:5)]
head(newdata2)
mod2 <- lm(income ~education+prestige+ #뒤에 4개
women +census,data=newdata2)
mod3 <- stepAIC(mod2) #LM 하고 MODEL 3로 만든다??
mod3
mod2
mod3 <- stepAIC(mod2) #LM 하고 MODEL 3로 만든다??
summary(mod2)
mod3 <- setpAIC(mod2) #LM 하고 MODEL 3로 만든다??
head(newdata2)
mod2 <- lm(income ~education+prestige+ #뒤에 4개
women +census,data=newdata2)
summary(mod2)
mod3 <- setpAIC(mod2) #LM 하고 MODEL 3로 만든다??
str(Prestige)
library(MASS)
str(Prestige)
#115 #adjusted r square : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
str(Prestige)
str(prestige)
#con
predict(model)
cars[,2]-predict(model)
pred <- W*speed+b
pred
compare <- data.frame(pred,cars[,2],pred-cars[,2])
compare
colnames(compare) <- c('예쌍','실제','오차')
head(compare)
head(cars)
plot(dist~speed,data=cars)
plot(cars$speed,cars$dist) #??
#lm=linear model
#종속변수 독립변수 # y= 3.9x -18
model <- lm(dist~speed,cars)
model
str(model)
model$coefficients
abline(model)
coef(model)[1] #b value, 절편
coef(model)[2]# a value, 계수
class(model)
#112
b <- coef(model)[1]  #ax+b 중 b
W <- coef(model)[2]# 기울기 a
speed <- 30
dist <- W*speed +b
dist
speed <- 35
dist <- W*speed+b
dist
speed <- 40
dist <- W*speed+b
dist
#113
speed <- cars[,1]
pred <- W*speed+b
pred
compare <- data.frame(pred,cars[,2],pred-cars[,2])
colnames(compare) <- c("예상","실제","오차")
head(compare)
#114 companion to applied regression, 회귀 분석 및 통계 모델 지원
# 다양한 도구를 제공하는 인기 있는 packages
if(!require(car)){
install.packages("car")
}
library(car)
head(Prestige)
tail(Prestige)
str(Prestige)
class(Prestige)
sum(is.na(Prestige))
newdata <- Prestige[,c(1:4)] #data prepare
plot(newdata,pch=16,col="blue", #산점도를 통해 변수 간 관계확인
main="Matrix Scatterplot") #pch?
mod1 <- lm(income~education+prestige+  #regression extract
women,data=newdata)
#census : 직업 식별 번호, type 직업 유형 (화이트, 블루, 프로페셔널)
summary(mod1)
#115 #adjusted r square : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
str(prestige)
#114 companion to applied regression, 회귀 분석 및 통계 모델 지원
# 다양한 도구를 제공하는 인기 있는 packages
if(!require(car)){
install.packages("car")
}
library(car)
head(Prestige)
tail(Prestige)
str(Prestige)
class(Prestige)
sum(is.na(Prestige))
newdata <- Prestige[,c(1:4)] #data prepare
plot(newdata,pch=16,col="blue", #산점도를 통해 변수 간 관계확인
main="Matrix Scatterplot") #pch?
mod1 <- lm(income~education+prestige+  #regression extract
women,data=newdata)
#census : 직업 식별 번호, type 직업 유형 (화이트, 블루, 프로페셔널)
summary(mod1)
#115 #adjusted r square : 63.2% /
if(!require(MASS)){
install.packages("MASS")
}
library(MASS)
str(prestige)
library(carData)
str(prestige)
install.packages("carData")
if(!require(carData)){
install.packages("carData")
}
library(MASS)
install.packages("carData")
#con
x <- 1:10
y <- 2*x+rnorm(10)
smodel <- 1m(y-x)
smodel <- lm(y-x)
smodel <- lm(y-x)
#con
x <- 1:10
y <- 2*x+rnorm(10)
smodel <- lm(y-x)
plot(x,y)
abline(smodel)
abline(coef(smodel)[1],coef(smodel)[2])
abline(smodel,col="red",lty="dashed",Twd=2)
smodel <- lm(y~x)
plot(x,y)
y <- 2*x+rnorm(10)
smodel <- lm(y~x)
plot(x,y)
abline(smodel)
abline(coef(smodel)[1],coef(smodel)[2])
abline(smodel,col="red",lty="dashed",Twd=2)
dev.off()
abline(smodel)
plot(x.y) #산점도 그리기
abline(smodel)
dev.off()
abline(coef(smodel)[1],coef(smodel)[2])
abline(smodel,col="red",lty="dashed",lwd=2)
#con
x <- 1:10
y <- 2*x+rnorm(10)
smodel <- lm(y~x)
plot(x,y) #산점도 그리기
abline(smodel)
dev.off()
abline(coef(smodel)[1],coef(smodel)[2])
plot(x,y)
abline(coef(smodel)[1],coef(smodel)[2])
plot(x,y)
abline(smodel,col="red",lty="dashed",lwd=2)
#con
x <- 1:10
#con
x <- 1:10
y <- 2*x+rnorm(10) # rnorm?
smodel <- lm(y~x)
plot(x,y) #산점도 그리기
abline(smodel)
dev.off() #
plot(x,y) # line add ing (2)
abline(coef(smodel)[1],coef(smodel)[2]) #1은 절편, 2는 기울기slope
plot(x,y) #style adjust
abline(smodel,col="red",lty="dashed",lwd=2)
#11.6
iris.new <- iris
iris.new$Species <- sa.integer(iris.new$Species)
head(iris.new)
iris.new$Species <- as.integer(iris.new$Species)
head(iris.new)
mod.iris <- glm(Species ~, data=iris.new)
mod.iris <- glm(Species ~, data=iris.new)
head(iris.new)
mod.iris <- glm(Species ~, data=iris.new)
mod.iris <- glm(Species ~. data=iris.new)
mod.iris <- glm(Species ~ data=iris.new)
mod.iris <- glm(Species ~, data=iris.new)
#11/7
unknown <- data.frame(rbind(c(6.1,3.6,1.4,0.2)))
names(unknown) <- names(iris)[1:4]
unknown
pred <- predict(mod.iris,unknown)
pred
levels(iris$Species)[pred]
pred <- round(pred,0)
pred
levels(iris$Species)
levels(iris$Species)[pred]
#11.8
test <- iris[,1:4]
pred <- predict(mod.iris,test)
pred <- round(pred,0)
pred
answer <- as.integer(iris$Species)
pred==answer
acc <- mean(pred==answer)
acc
#11/7
unknown <- data.frame(rbind(c(6.1,3.6,1.4,0.2)))
names(unknown) <- names(iris)[1:4]
unknown
pred <- predict(mod.iris,unknown)
#로지스틱 회귀모델 시작이예요
#11.6 다 안됨
iris.new <- iris
iris.new$Species <- as.integer(iris.new$Species)
head(iris.new)
mod.iris <- glm(Species ~., data=iris.new)
summary(mod.iris)
summary(mod.iris)
#11/7
unknown <- data.frame(rbind(c(6.1,3.6,1.4,0.2)))
names(unknown) <- names(iris)[1:4]
unknown
pred <- predict(mod.iris,unknown)
pred
round(pred,0)
pred <- round(pred,0)
pred
levels(iris$Species)
levels(iris$Species)[pred]
#11.8   # mod.iris 는 어디 페이지에 잇니...위에 도 동일 이유
test <- iris[,1:4]
pred <- predict(mod.iris,test)
pred <- round(pred,0)
pred
answer <- as.integer(iris$Species)  # 실제 품종 정보
pred==answer     # 예측 품종 과 실제 품종이 같은지 비교ㄱㄱ?
acc <- mean(pred==answer)
acc
146/150
sum(pred==answer)/nrow(iris)
#end
#end
iris[pred !=answer,]
#con
#원래는 이게 새로운 방법 multinom()활용
if(!require("nnet")){
install.packages(nnet)
}
library(nnet)
data(iris)
iris.name <- iris
mod.rirs <- multinom(Species ~.,iris.new)
pred_species <- predict(mon.iris,type="class")
pred_sepcies
mod.rirs <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
#로지스틱 회귀모델 시작이예요  : glm() use !
#11.6 다 안됨
iris.new <- iris
iris.new$Species <- as.integer(iris.new$Species)
head(iris.new)
mod.iris <- glm(Species ~., data=iris.new) # ~., ㅋㅋㅋㅋㅋ
summary(mod.iris)
#11/7
unknown <- data.frame(rbind(c(6.1,3.6,1.4,0.2)))
names(unknown) <- names(iris)[1:4]
unknown
pred <- predict(mod.iris,unknown)
pred
round(pred,0)
pred <- round(pred,0)
pred
levels(iris$Species)
levels(iris$Species)[pred]
#11.8   # mod.iris 는 어디 페이지에 잇니...위에 도 동일 이유
test <- iris[,1:4]
pred <- predict(mod.iris,test)
pred <- round(pred,0)
pred
answer <- as.integer(iris$Species)  # 실제 품종 정보
pred==answer     # 예측 품종 과 실제 품종이 같은지 비교ㄱㄱ?
iris[pred !=answer,]
acc <- mean(pred==answer)
acc
146/150
sum(pred==answer)/nrow(iris)
#con
#원래는 이게 새로운 방법 multinom()활용
if(!require("nnet")){
install.packages(nnet)
}
library(nnet)
data(iris)
iris.name <- iris
mod.rirs <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
mod.rirs <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,]
acc <- mean(pred_species==iris$Species)
pred_species <- predict(mod.iris,type="class")
data(iris)
iris.name <- iris
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,]
data(iris)
iris.name <- iris
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,]
#con
#원래는 이게 새로운 방법 multinom()활용
if(!require("nnet")){
install.packages("nnet")
}
library(nnet)
data(iris)
iris.name <- iris
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,]
iris[pred_species != iris$Species,] #이줄 오류이유좀
acc <- mean(pred_species==iris$Species)
acc
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,] #이줄 오류이유좀
acc <- mean(pred_species==iris$Species)
acc
iris[pred_species != iris$Species,] #이줄 오류이유좀
#다항 로지스틱 회귀 ,
#범주형 종속 변수 가 3개 이상의 수준을 갖는 경우 사용
mod.iris <- multinom(Species ~.,iris.new)
pred_species <- predict(mod.iris,type="class")
pred_species
iris[pred_species != iris$Species,] #이줄 오류이유좀
